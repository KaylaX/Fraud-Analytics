#PART 3 reducing dimensionality through prcomp function
?prcomp
data_pca_result <- prcomp(data_pca_z_input, scale. = T)


head(data_pca_result$rotation)

data_pca_result_1 <- data_pca_result$rotation

View(data_pca_result_1)


#Extracting variance of the PCAs looking at the variance

variance_data_pca_result1 <- data_pca_result$sdev^2  #PCAs Dataset

Eigenvalues <- eigen(cov(data_pca_z_input))$values   #Normalized dataset

variance_data_pca_result1[1:13]
Eigenvalues[1:13]


#Keep the highest PCAs with the highest variance

data_pca_result_merge <- rbind(data_pca_result$rotation,data_pca_result$sdev^2)

data_pca_result_merge[52,]


View(data_pca_result_merge)

rownames(data_pca_result_merge)[length(rownames(data_pca_result_merge))]<- "Variance"

View(data_pca_result_merge)

new_data_pca_result <- data_pca_result_merge[, c(1:8)] #keeping only the top 8 with the highest variance



#Check if they match

#Part 4 z scale the reduced variable(the PCs) from the top 8 PCs

new_data_pca_result_z = new_data_pca_result
for ( i in 1:ncol(new_data_pca_result_z)) {
  mean_pca_z = mean(new_data_pca_result_z[,i])
  sd_pca_z = sd(new_data_pca_result_z[,i])
  new_data_pca_result_z[,i] = ((new_data_pca_result_z[,i] - mean_pca_z) / sd_pca_z)
}


length(rownames(new_data_pca_result_z))

new_data_pca_result_z <- new_data_pca_result_z[-52,]

View(new_data_pca_result_z)

write.csv(new_data_pca_result_z , 'new_data_pca_result_z.csv')

#Part 5 Fraud score Calculation

#First score function

# For fraud purposes m = 2

m = 2

str(new_data_pca_result_z)

str(new_data_pca_result_z)

# fraud_score1 <- apply(abs(new_data_pca_result_z)^m, 
#                       function(x) sum) ^ (1/m)

fraud_score1 <- apply(abs(scale(new_data_pca_result_z))^m,1,sum)^(1/m)

fraud_score1 <- data.frame(fraud_score1)

View(fraud_score1)
summary(fraud_score1)

fraud_score2 <- (fraud_score1 - min(fraud_score1)) / (max(fraud_score1)  - min(fraud_score1))

View(fraud_score2)

ggplot(fraud_score2, aes(x = fraud_score1, y = ..density.. ))+ 
  geom_histogram(fill = "dodgerblue3" , colour = "grey60",size=0.1,bins=10)+
  geom_line(stat='density',adjust=2)+
  xlab("Fraud Score")+
  ylab("") +
  ggtitle(" Fraud Score Histogram")+
  theme_classic()+
  theme(plot.title =  element_text(hjust = 0.5))
